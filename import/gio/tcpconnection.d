// Generated by gnome-h2d.rb <http://github.com/ddude/gnome.d>.

module gio.tcpconnection;

/* GIO - GLib Input, Output and Streaming Library
 *
 * Copyright Â© 2008, 2009 Codethink Limited
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation; either version 2 of the licence or (at
 * your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General
 * Public License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307, USA.
 *
 * Authors: Ryan Lortie <desrt@desrt.ca>
 */

/+
#if !defined (__GIO_GIO_H_INSIDE__) && !defined (GIO_COMPILATION)
#error "Only <gio/gio.h> can be included directly."
//#endif
+/



public import gio.socketconnection;

extern(C):

//#define G_TYPE_TCP_CONNECTION                               (g_tcp_connection_get_type ())
//#define G_TCP_CONNECTION(inst)                              (G_TYPE_CHECK_INSTANCE_CAST ((inst),                     
//                                                             G_TYPE_TCP_CONNECTION, GTcpConnection))
//#define G_TCP_CONNECTION_CLASS(class)                       (G_TYPE_CHECK_CLASS_CAST ((class),                       
//                                                             G_TYPE_TCP_CONNECTION, GTcpConnectionClass))
//#define G_IS_TCP_CONNECTION(inst)                           (G_TYPE_CHECK_INSTANCE_TYPE ((inst),                     
//                                                             G_TYPE_TCP_CONNECTION))
//#define G_IS_TCP_CONNECTION_CLASS(class)                    (G_TYPE_CHECK_CLASS_TYPE ((class),                       
//                                                             G_TYPE_TCP_CONNECTION))
//#define G_TCP_CONNECTION_GET_CLASS(inst)                    (G_TYPE_INSTANCE_GET_CLASS ((inst),                      
//                                                             G_TYPE_TCP_CONNECTION, GTcpConnectionClass))

struct _GTcpConnectionPrivate;
alias _GTcpConnectionPrivate* GTcpConnectionPrivate;
//struct _GTcpConnectionClass                         GTcpConnectionClass;

struct GTcpConnectionClass {
  GSocketConnectionClass parent_class;
};

struct GTcpConnection {
  GSocketConnection parent_instance;
  GTcpConnectionPrivate *priv;
};

GType    g_tcp_connection_get_type                () pure;

void     g_tcp_connection_set_graceful_disconnect (GTcpConnection *connection,
						   gboolean        graceful_disconnect);
gboolean g_tcp_connection_get_graceful_disconnect (GTcpConnection *connection);




